import 'package:core/core.dart';import 'package:design/design.dart';import 'package:driver/features/history/presentation/manager/history/bloc.dart';import 'package:driver/features/history/presentation/manager/history/event.dart';import 'package:driver/features/history/presentation/manager/history/state.dart';import '../../../../../common/utils/bloc_wrapper.dart';class HistoryContainer extends StatelessWidget {  final ViewModelBuilder<dynamic> builder;  const HistoryContainer({Key? key, required this.builder}) : super(key: key);  @override  Widget build(BuildContext context) {    return BlocSelectorWrapper<dynamic, HistoryBloc, HistoryState>(      onInit: () {        context.read<HistoryBloc>().add(GetHistoriesEvent());      },      onRetry: () => context.read<HistoryBloc>().retry(),      selector: (state) => state.historyState!,      builder: builder,    );  }}