import 'package:driver/app_injection.dart';import 'package:driver/features/invoice/data/data_sources/balance_api.dart';import 'package:driver/features/invoice/data/repositories/invoices_repository.dart';import 'package:driver/features/invoice/domain/use_cases/invoice_usecase.dart';import 'package:driver/features/invoice/presentation/manager/invoice/bloc.dart';import 'package:driver/features/profile/data/data_sources/profile_api.dart';import 'package:driver/features/profile/data/repositories/profile_repository.dart';import 'package:driver/features/profile/domain/use_cases/profile_usecase.dart';import 'package:driver/features/profile/presentation/manager/profile/bloc.dart';class InvoiceInjection {  static void dependencies() {    si.registerLazySingleton(      () => InvoiceApi(api: si()),    );    si.registerLazySingleton(      () => InvoiceRepository(connectivity: si(), remote: si()),    );    si.registerLazySingleton(      () => InvoiceUseCase(repository: si()),    );    si.registerLazySingleton(() => InvoiceBloc(si()));  }}