import 'package:bot_toast/bot_toast.dart';import 'package:design/design.dart';import 'package:driver/common/utils/signal_r_config.dart';import 'package:driver/features/domain/use_cases/driver_usecase.dart';import 'package:driver/features/presentation/manager/container.dart';import 'package:driver/features/presentation/pages/map_driver/widgets/available_delevieries_item.dart';import 'package:get/get.dart';import '../../../../AllScreens/newRideScreen.dart';import '../../../../app_injection.dart';import '../../widgets/round_app_bar.dart';class AvailableDeliveries extends StatelessWidget {  const AvailableDeliveries({Key? key}) : super(key: key);  @override  Widget build(BuildContext context) {    return SafeArea(      child: Scaffold(        body: Column(          mainAxisSize: MainAxisSize.min,          children: [            const RoundedAppBar(              title: 'الطلبات المتاحة  ',            ),            Expanded(              child: GetAvailableDeliveriesContainer(builder: (context, data) {                return ListView.builder(                    itemCount: data.length,                    itemBuilder: (context, i) {                      Delivers delivers = data[i];                      return AvailableDeliveriesItem(                        delivers: delivers,                        onTap: () async {                          try {                            BotToast.showLoading();                            await si<DriverUseCase>().changeDeliveryStatue(id: delivers.id, statue: 'Accept');                            BotToast.closeAllLoading();                            Get.to(() => NewRideScreen(rideDetails: delivers));                          } catch (e) {                            BotToast.closeAllLoading();                          }                        },                      );                    });              }),            )          ],        ),      ),    );  }}