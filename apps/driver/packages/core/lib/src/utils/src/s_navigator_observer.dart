/// File created by/// Abed <Abed-supy-io>/// on 27 /Apr/2022part of '../utils.dart';class SNavigatorObserver extends NavigatorObserver {  static List<Route<dynamic>?> routeStack = [];  @override  void didPush(Route<dynamic> route, Route<dynamic>? previousRoute) {    devtools.log('-----------------Did-Push Transition------------------------\n'        'route: ${route.settings.name}\n'        'previousRoute: ${previousRoute?.settings.name}\n'        '--------------------------------------------------------------------\n');    routeStack.add(route);  }  @override  void didPop(Route<dynamic> route, Route<dynamic>? previousRoute) {    devtools.log('-----------------Did-Pop Transition------------------------\n'        'route: ${route.settings.name}\n'        'previousRoute: ${previousRoute?.settings.name}\n'        '--------------------------------------------------------------------\n');    routeStack.removeLast();  }  @override  void didRemove(Route route, Route? previousRoute) {    devtools.log('-----------------Did-RemoveTransition------------------------\n'        'route: ${route.settings.name}\n'        'previousRoute: ${previousRoute?.settings.name}\n'        '--------------------------------------------------------------------\n');    routeStack.removeLast();  }  @override  void didReplace({Route? newRoute, Route? oldRoute}) {    devtools.log('-----------------Did-RemoveTransition------------------------\n'        'newRoute: ${newRoute?.settings.name}\n'        'oldRoute: ${oldRoute?.settings.name}\n'        '--------------------------------------------------------------------\n');    routeStack.removeLast();    routeStack.add(newRoute);  }  Route<dynamic>? isExistedRoute(String route) {    return routeStack.firstWhere((element) {      return element!.settings.name == route;    }, orElse: () => null);  }}