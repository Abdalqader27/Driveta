/// Dio has already implemented a [DefaultTransformer], and as the default/// [Transformer]. If you want to custom the transformation of/// request/response data, you can provide a [Transformer] by your self, and/// replace the [DefaultTransformer] by setting the [dio.Transformer].////// [FlutterTransformer] is especially for flutter, by which the json decoding/// will be in background with [compute] function./// FlutterTransformerpart of network;class SFlutterTransformer extends DefaultTransformer {  SFlutterTransformer() : super(jsonDecodeCallback: _parseJson);}// Must be top-level function_parseAndDecode(String response) {  return jsonDecode(response);}_parseJson(String text) {  return compute(_parseAndDecode, text);}